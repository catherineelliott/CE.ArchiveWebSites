// <auto-generated />
using System;
using CE.ArchiveWebSites.Core.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CE.ArchiveWebSites.Core.Migrations
{
    [DbContext(typeof(ArchivesDbContext))]
    [Migration("20191018104558_AddOrders")]
    partial class AddOrders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CE.ArchiveWebSites.Core.Models.MediaResourceComment", b =>
                {
                    b.Property<int>("MediaResourceCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MediaResourceId")
                        .HasColumnType("int");

                    b.HasKey("MediaResourceCommentId");

                    b.ToTable("MediaResourceComments");

                    b.HasData(
                        new
                        {
                            MediaResourceCommentId = 1,
                            Comment = "That's lovely",
                            CreatedBy = "Catherine",
                            MediaResourceId = 1
                        },
                        new
                        {
                            MediaResourceCommentId = 2,
                            Comment = "Not great",
                            CreatedBy = "Catherine",
                            MediaResourceId = 2
                        },
                        new
                        {
                            MediaResourceCommentId = 3,
                            Comment = "That's a lovely Playbill",
                            CreatedBy = "Catherine",
                            MediaResourceId = 3
                        },
                        new
                        {
                            MediaResourceCommentId = 4,
                            Comment = "Not a great Playbill",
                            CreatedBy = "Catherine",
                            MediaResourceId = 4
                        });
                });

            modelBuilder.Entity("CE.ArchiveWebSites.Core.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SpecialRequests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CE.ArchiveWebSites.Core.Models.OrderCost", b =>
                {
                    b.Property<int>("OrderCostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PrintFinish")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("OrderCostId");

                    b.HasIndex("SizeId");

                    b.ToTable("OrderCosts");

                    b.HasData(
                        new
                        {
                            OrderCostId = 1,
                            Cost = 6.67m,
                            PrintFinish = 0,
                            SizeId = 1
                        },
                        new
                        {
                            OrderCostId = 2,
                            Cost = 6.67m,
                            PrintFinish = 1,
                            SizeId = 1
                        },
                        new
                        {
                            OrderCostId = 3,
                            Cost = 9.17m,
                            PrintFinish = 0,
                            SizeId = 2
                        },
                        new
                        {
                            OrderCostId = 4,
                            Cost = 9.17m,
                            PrintFinish = 1,
                            SizeId = 2
                        },
                        new
                        {
                            OrderCostId = 5,
                            Cost = 10.84m,
                            PrintFinish = 0,
                            SizeId = 3
                        },
                        new
                        {
                            OrderCostId = 6,
                            Cost = 10.84m,
                            PrintFinish = 1,
                            SizeId = 3
                        });
                });

            modelBuilder.Entity("CE.ArchiveWebSites.Core.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Finish")
                        .HasColumnType("int");

                    b.Property<int>("MediaResourceId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Sepia")
                        .HasColumnType("bit");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SizeId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("CE.ArchiveWebSites.Core.Models.OrderSize", b =>
                {
                    b.Property<int>("OrderSizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderSizeId");

                    b.ToTable("OrderSizes");

                    b.HasData(
                        new
                        {
                            OrderSizeId = 1,
                            Size = "10 x 8 inches"
                        },
                        new
                        {
                            OrderSizeId = 2,
                            Size = "12 x 9 inches"
                        },
                        new
                        {
                            OrderSizeId = 3,
                            Size = "16 x 12 inches"
                        });
                });

            modelBuilder.Entity("CE.ArchiveWebSites.Core.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Finish")
                        .HasColumnType("int");

                    b.Property<int>("MediaResourceId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderSizeId")
                        .HasColumnType("int");

                    b.Property<bool>("Sepia")
                        .HasColumnType("bit");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("OrderSizeId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("CE.ArchiveWebSites.Core.Models.WebCard", b =>
                {
                    b.Property<int>("WebCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contents")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WebCardId");

                    b.ToTable("WebCards");
                });

            modelBuilder.Entity("CE.ArchiveWebSites.Core.Models.OrderCost", b =>
                {
                    b.HasOne("CE.ArchiveWebSites.Core.Models.OrderSize", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CE.ArchiveWebSites.Core.Models.OrderDetail", b =>
                {
                    b.HasOne("CE.ArchiveWebSites.Core.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CE.ArchiveWebSites.Core.Models.OrderSize", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CE.ArchiveWebSites.Core.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("CE.ArchiveWebSites.Core.Models.OrderSize", "OrderSize")
                        .WithMany()
                        .HasForeignKey("OrderSizeId");
                });
#pragma warning restore 612, 618
        }
    }
}
